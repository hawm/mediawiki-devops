version: "3"

services:
  mediawiki:
    build:
      context: ./mediawiki
      target: prod
    restart: always
    environment:
      TZ:
      MW_INSTALL_PATH:
      WIKI_NAME:
      WIKI_HOST:
      WIKI_PASSWORD_SENDER_EMAIL:
      WIKI_EMERGENCY_CONTACT_EMAIL:
      WIKI_SMTP_HOST:
      WIKI_SMTP_PORT:
      WIKI_SMTP_AUTH:
      WIKI_SMTP_USERNAME:
      WIKI_SMTP_PASSWORD:
      WIKI_DATABASE_HOST:
      WIKI_DATABASE_PORT:
      WIKI_DATABASE_NAME:
      WIKI_DATABASE_USER:
      WIKI_DATABASE_PASSWORD:
      WIKI_REDIS_HOST:
      WIKI_REDIS_PORT:
    volumes:
      # maintenance scritp must run with database,
      # so we don't mount it under the dockerfile
      - ./mediawiki/maintenance:/usr/local/mwmaintenance
      # uploads
      - wiki-upload:/var/www/html/images
      # settings
      - ./mediawiki/settings:${MW_INSTALL_PATH}/settings
      # apache
      - ./mediawiki/.htaccess:${MW_INSTALL_PATH}/.htaccess
      # robots
      - ./mediawiki/robots.txt:${MW_INSTALL_PATH}/robots.txt
      # favicon
      - ./mediawiki/favicon.ico:${MW_INSTALL_PATH}/favicon.ico
    labels:
      traefik.enable: "true"
      traefik.http.routers.wiki-secure.rule: Host(`${WIKI_HOST}`)
      traefik.http.routers.wiki-secure.entrypoints: websecure
      traefik.http.routers.wiki-secure.tls: "true"
      traefik.http.routers.wiki-secure.tls.certresolver: letsencrypt
      traefik.http.routers.wiki.rule: Host(`${WIKI_HOST}`)
      traefik.http.routers.wiki.entrypoints: web
      traefik.http.middlewares.wiki.redirectscheme.scheme: https
    networks:
      - frontend
      - backend
    extra_hosts:
      - ${WIKI_HOST}:host-gateway
    depends_on:
      - mariadb
      - redis

  mariadb:
    image: mariadb
    restart: always
    environment:
      TZ:
      # @see https://phabricator.wikimedia.org/source/mediawiki/browse/master/includes/DefaultSettings.php
      MYSQL_DATABASE: ${WIKI_DATABASE_NAME}
      MYSQL_USER: ${WIKI_DATABASE_USER}
      MYSQL_PASSWORD: ${WIKI_DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${WIKI_DATABASE_ROOT_PASSWORD}
    volumes:
      - wiki-database:/var/lib/mysql
      - wiki-database-dump:/docker-entrypoint-initdb.d
    networks:
      - backend

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data
      - ./redis/conf:/usr/local/etc/redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - backend

  overcommit:
    profiles:
      - overcommit
    build:
      context: ./overcommit
    restart: "no"
    privileged: "true"
    volumes:
      - /proc/sys/vm:/mnt/vm

  traefik:
    image: traefik:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      TRAEFIK_PROVIDERS_DOCKER: "true"
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: wiki_frontend
      TRAEFIK_ENTRYPOINTS_web_ADDRESS: :80
      TRAEFIK_ENTRYPOINTS_websecure_ADDRESS: :443
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_TLSCHALLENGE: "true"
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_EMAIL: ${ACME_EMAIL}
      TRAEFIK_CERTIFICATESRESOLVERS_letsencrypt_ACME_STORAGE: /etc/traefik/acme/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme-data:/etc/traefik/acme
    networks:
      - frontend

  rclone:
    profiles:
      - rclone
    build: ./rclone
    environment: 
      TZ:
      BACKUP_CRON:
      BACKUP_OPTS:
      BACKUP_DST:
      BACKUP_SRC:
      BACKUP_DATABASE_SRC:
      BACKUP_UPLOAD_SRC:
      BACKUP_LOCK_PATH:
      BACKUP_DB_HOST: ${WIKI_DATABASE_HOST}
      BACKUP_DB_PORT: ${WIKI_DATABASE_PORT}
      BACKUP_DB_NAME: ${WIKI_DATABASE_NAME}
      BAKCUP_DB_USER: ${WIKI_DATABASE_USER}
      BACKUP_DB_PASS: ${WIKI_DATABASE_PASSWORD}
    volumes:
      - wiki-database-dump:${BACKUP_DATABASE_SRC}
      - wiki-upload:${BACKUP_UPLOAD_SRC}
      - backup-lock:${BACKUP_LOCK_PATH}
    networks:
      - backend

networks:
  frontend:
    name: wiki_frontend
  backend:

volumes:
  wiki-database:
  wiki-database-dump:
  wiki-upload:
  acme-data:
  redis-data:
  backup-lock:
